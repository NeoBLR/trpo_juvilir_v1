<Window x:Class="trpo_juvilir_v1.change_client"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:trpo_juvilir_v1"
        mc:Ignorable="d"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        fw:AcrylicWindow.Enabled="True"
        Title="change_client" Height="450" Width="450" AllowsTransparency="True" WindowStyle="None" Style="{DynamicResource winreg}" Background="#7F1C1A32" BorderBrush="#CCFE8256" Icon="img/icon.png">
    <Window.Resources>
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="winreg" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#19BEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#193C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#19C4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#192C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btn_grad" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>



    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Name="toolbar" Grid.Row="0" MouseDown="toolbar_MouseDown"  MouseLeftButtonDown="toolbar_MouseLeftButtonDown">

            <Rectangle RadiusX="5" RadiusY="5" Height="50" Margin="0">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
                        <GradientStop Color="#FFFFE53B" Offset="0"/>
                        <GradientStop Color="#FFFC007A" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Label Content="Ювилирная Мастерская" HorizontalAlignment="Center" Foreground="White"></Label>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 10 0">

                <Image Name="ShowBtn" Height="20" Width="20" Margin="0 0 3 0" MouseDown="ShowBtn_MouseDown">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/img/toolbar_show_off.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=ShowBtn}" Value="True">
                                    <Setter Property="Source" Value="/img/toolbar_show.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <Image Name="HideBtn" Height="20" Width="20" Margin="0 0 3 0" MouseDown="HideBtn_MouseDown">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/img/toolbar_hide_off.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=HideBtn}" Value="True">
                                    <Setter Property="Source" Value="/img/toolbar_hide.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <Image Name="CloseBtn" Height="20" Width="20" MouseDown="CloseBtn_MouseDown">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/img/toolbar_closed_off.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseBtn}" Value="True">
                                    <Setter Property="Source" Value="/img/toolbar_closed.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

            </StackPanel>

        </Grid>

        <Grid Grid.Row="1">

            <Grid.RowDefinitions>
                <RowDefinition Height=".2*"/>
                <RowDefinition Height=".2*"/>
                <RowDefinition Height=".2*"/>

                <RowDefinition Height=".2*"/>
                <RowDefinition Height=".2*"/>
                <RowDefinition Height=".2*"/>



                <RowDefinition Height=".2*"/>



            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="surname" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <TextBox x:Name="t_surname" Grid.Column="1" Text="Введите текст" Background="#19FFFFFF" Foreground="White" Margin="5" GotFocus="TextBox_GotFocus"/>

            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="firsname" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <TextBox x:Name="t_firsname" Grid.Column="1" Text="Введите текст" Background="#19FFFFFF" Foreground="White" Margin="5" GotFocus="TextBox_GotFocus"/>

            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="patronymic" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <TextBox x:Name="t_patronymic" Grid.Column="1" Text="Введите текст" Background="#19FFFFFF" Foreground="White" Margin="5" GotFocus="TextBox_GotFocus"/>

            </Grid>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="data of birht" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <TextBox x:Name="t_birht" Grid.Column="1" Text="Введите текст" Background="#19FFFFFF" Foreground="White" Margin="5" GotFocus="TextBox_GotFocus"/>

            </Grid>

            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="pasport id" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <TextBox x:Name="t_passport" Grid.Column="1" Text="Введите текст" Background="#19FFFFFF" Foreground="White" Margin="5" GotFocus="TextBox_GotFocus"/>

            </Grid>

            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="Adress" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <TextBox x:Name="t_adress" Grid.Column="1" Text="Введите текст" Background="#19FFFFFF" Foreground="White" Margin="5" GotFocus="TextBox_GotFocus"/>

            </Grid>

            <Button Style="{DynamicResource btn_grad}" Grid.Row="6" Content="Изменить" Background="#19DDDDDD" Foreground="White" BorderBrush="#00707070" Click="Button_Click"/>

        </Grid>

    </Grid>



</Window>
